apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

//region Release configuration

artifactoryPublish.dependsOn('build')
publishToMavenLocal.dependsOn('build')

publishing {
    publications {
        cooeeJFrog(MavenPublication) {
            groupId = project.group.toString()  // com.letscooee
            artifactId = project.getName()      // "cooee-android-sdk"
            version = project.version.toString()

            // Customizing the POM file
            pom {
                name = 'Cooee Android SDK'
                description = 'Hyper-personalised Mobile App Re-Engagement via Machine Learning'
                url = 'https://github.com/letscooee/cooee-android-sdk'
                scm {
                    connection = 'scm:git:git://github.com/letscooee/cooee-android-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com:letscooee/cooee-android-sdk.git'
                    url = 'https://github.com/letscooee/cooee-android-sdk/tree/master'
                }
            }

            project.afterEvaluate {
                artifact bundleReleaseAar

                pom.withXml {
                    // Make sure we copy dependencies to pom.xml
                    def dependencies = asNode().appendNode("dependencies")
                    configurations.getByName("releaseCompileClasspath").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                        def dependency = dependencies.appendNode("dependency")
                        dependency.appendNode("groupId", it.moduleGroup)
                        dependency.appendNode("artifactId", it.moduleName)
                        dependency.appendNode("version", it.moduleVersion)
                    }
                }
            }
        }

        myLocalMaven(MavenPublication) {
            groupId project.group.toString()
            artifactId project.getName()
            version project.version.toString()
            artifact("$buildDir/outputs/aar/${project.getName()}-debug.aar")

            pom.withXml {
                def dependencies = asNode().appendNode("dependencies")
                configurations.getByName("releaseCompileClasspath").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode("dependency")
                    dependency.appendNode("groupId", it.moduleGroup)
                    dependency.appendNode("artifactId", it.moduleName)
                    dependency.appendNode("version", it.moduleVersion)
                }
            }
        }
    }
}

artifactoryPublish {
    publications(publishing.publications.cooeeJFrog)
}

artifactory {
    clientConfig.setIncludeEnvVars(true)
    clientConfig.info.addEnvironmentProperty('test.adding.dynVar', new Date().toString())

    contextUrl = 'https://letscooee.jfrog.io/artifactory'
    publish {
        repository {
            repoKey = 'default-maven-local'
            username = "${artifactoryUser}"
            password = "${artifactoryPassword}"
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            //noinspection GroovyConstructorNamedArguments
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            publishPom = true // Publish generated POM files to Artifactory (true by default)
        }
    }
}

//endregion

android {
    lintOptions {
        abortOnError false
    }

    packagingOptions {
        pickFirst 'lib/**/*.so'
    }

    compileSdkVersion 31
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        renderscriptTargetApi 29
        renderscriptSupportModeEnabled true
        versionCode project.version.toString()
                .replace("-SNAPSHOT", "")
                .tokenize('.')
                .collect { it.padLeft(2, '0') }
                .join('')
                .toInteger()
        versionName project.version.toString()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "long", "VERSION_CODE", "${defaultConfig.versionCode}"
        buildConfigField "String", "VERSION_NAME", "\"${defaultConfig.versionName}\""
        buildConfigField "java.util.concurrent.atomic.AtomicBoolean", "IS_TESTING", "new java.util.concurrent.atomic.AtomicBoolean(false)"
    }
    buildTypes {
        debug {
            buildConfigField "String", "SERVER_URL", '"https://api.sdk.letscooee.com"'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_URL", '"https://api.sdk.letscooee.com"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    String lifecycleVersion = "2.4.1"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    // region AndroidX dependencies
    api 'androidx.core:core:1.8.0'
    api "androidx.cardview:cardview:1.0.0"
    api "androidx.room:room-runtime:2.4.2"
    api 'androidx.appcompat:appcompat:1.4.2'
    api 'androidx.constraintlayout:constraintlayout:2.1.4'
    api "androidx.lifecycle:lifecycle-process:$lifecycleVersion"
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    api "androidx.browser:browser:1.4.0"
    // endregion

    // region Retrofit dependencies
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    // endregion

    // region Google Firebase dependencies
    api 'com.google.android.gms:play-services-location:20.0.0'
    api platform('com.google.firebase:firebase-bom:26.2.0')
    api 'com.google.firebase:firebase-analytics'
    api 'com.google.firebase:firebase-messaging'
    // endregion

    // region RxJava dependencies
    api 'net.sourceforge.streamsupport:android-retrofuture:1.7.4'
    // endregion

    // region Google's additional dependencies
    api 'com.google.android.material:material:1.6.1'
    // endregion

    // region Single standalone dependencies
    api 'com.github.bumptech.glide:glide:4.12.0'
    api 'jp.wasabeef:blurry:4.0.0'
    api 'io.sentry:sentry-android:4.3.0'
    api 'org.mongodb:bson:4.2.3'
    // endregion

    annotationProcessor "androidx.room:room-compiler:2.4.2"
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // region Test Case dependencies
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.google.truth:truth:1.1.3'
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation 'org.robolectric:robolectric:4.8.1'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'org.mockito:mockito-core:4.4.0'
    testImplementation 'org.mockito:mockito-inline:4.4.0'

    //androidTestImplementation 'org.mockito:mockito-all:1.10.19'
    // endregion
}